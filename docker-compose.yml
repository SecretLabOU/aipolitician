version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_WORKERS=1
      - DEVICE=cuda
      - MODEL_PRECISION=float16
      - CUDA_VISIBLE_DEVICES=0
      - GPU_MEMORY_FRACTION=0.9
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - politician_ai_net

  # Optional development services
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    environment:
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - politician_ai_net
    profiles:
      - dev

  # Monitoring services
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - politician_ai_net
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - politician_ai_net
    profiles:
      - monitoring

networks:
  politician_ai_net:
    driver: bridge

volumes:
  data:
  models:
  monitoring:

# Usage:
# - Basic: docker-compose up
# - Development: docker-compose --profile dev up
# - Monitoring: docker-compose --profile monitoring up
# - All services: docker-compose --profile dev --profile monitoring up
